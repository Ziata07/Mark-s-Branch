using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace New_WPF
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void calculateButton_Click(object sender, RoutedEventArgs e)
        {
            int results = CheckHoursInput() + CheckMinutesInput() + CheckSecondsInput() ;
            resultLabel.Content = results;
        }

        public int CalculateSeconds(int x)
        {
            if (x < 0)
            {
                x = 0; //safeguard if user puts in negative num
            }
            else
            {
                return x;
            }
            return x;
        }
        public int CalculateHours(int x)
        {
            if (x < 0)
            {
                x = 0; //safeguard if user puts in negative num
            }
            else
            {
                x = x * 3600;
            }
            return x;
        }
        public int CalculateMinutes(int x)
        {
            if (x < 0)
            {
                x = 0; //safeguard if user puts in negative num
            }
            else
            {
                x = x * 60;
            }
            return x;
        }

        public int CheckSecondsInput()
        {
            int seconds = 0;
            try
            {
                seconds = int.Parse(secTextBox.Text);
            }
            catch (FormatException)
            {                
                MessageBox.Show("No number entered for: Seconds");
                secTextBox.Foreground = new SolidColorBrush(Colors.Red);
            }
            catch (OverflowException)
            {
                MessageBox.Show("Please enter a small number!");
                resultLabel.Content = String.Empty;
            }
            if (seconds < 0)
            {
                MessageBox.Show("Insert a non negative number for: Seconds");
                secTextBox.Foreground = new SolidColorBrush(Colors.Red);
            }
            return CalculateSeconds(seconds);
        }
        public int CheckHoursInput()
        {
            int hours = 0;
            try
            {
                hours = int.Parse(hoursTextBox.Text);
            }
            catch (FormatException)
            {                
                MessageBox.Show("No number entered for: Hours");
                hoursTextBox.Foreground = new SolidColorBrush(Colors.Red);
            }
            catch (OverflowException)
            {
                MessageBox.Show("Please enter a small number!");
                resultLabel.Content = String.Empty;
            }
            if (hours < 0)
            {
                MessageBox.Show("Insert a non negative number for: Hours");
                hoursTextBox.Foreground = new SolidColorBrush(Colors.Red);
            }
            return CalculateHours(hours);
        }
        public int CheckMinutesInput()
        {
            int minutes = 0;
            try
            {
                minutes = int.Parse(minTextBox.Text);
            }
            catch (FormatException)
            {                
                MessageBox.Show("No number entered for: Minutes");
                minTextBox.Foreground = new SolidColorBrush(Colors.Red);
            }
            catch (OverflowException)
            {
                MessageBox.Show("Please enter a small number!");
                resultLabel.Content = String.Empty;
            }
            if (minutes < 0)
            {
                MessageBox.Show("Insert a non negative number for: Minutes");
                minTextBox.Foreground = new SolidColorBrush(Colors.Red);
            }
            return CalculateMinutes(minutes);
        }
    }
}
